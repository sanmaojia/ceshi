{"name": "获取", "status": "broken", "statusDetails": {"message": "TypeError: 'bool' object is not subscriptable", "trace": "self = <test_card.TestUser object at 0x106fb4c80>\ndata = {'account': {'json': {'productUserId': '1215'}, 'method': 'post', 'url': 'patient/bindList'}, 'expected': {'$..code': ....': 27, '$..data[*].idType': '$idCard', '$..msg': '操作成功'}, 'extract': {'idCard': '$..data.idCard'}, 'status': 200, ...}\n\n    @allure.title('{data[title]}')\n    @pytest.mark.parametrize('data', datas['header_card'])\n    def test_send_code(self, data):\n        # 打印当前执行的用例标题\n        ColorPrinter.print(f\"执行用例: {data['title']}\", color=\"magenta\", bold=True)\n    \n        # 发送请求（send_http 内部自动加 token）\n        res = api.send_http(**data['account'])\n        print(\"响应内容:\", res.text)\n    \n        # 校验状态码\n        assert res.status_code == data.get(\"status\", 200), f\"状态码校验失败！实际: {res.status_code}\"\n    \n        # 提取变量到变量池\n>       self.extract(res.json(), data.get(\"extract\", {}))\n\ntestcases/test_api/test_card.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'test_card.TestUser'>, resp = {'code': 0, 'data': [{'address': '', 'age': 24, 'ageDay': 0, 'birthday': '2000-12-31', ...}], 'msg': '操作成功'}, expr = {'idCard': '$..data.idCard'}\n\n    @classmethod\n    def extract(cls,resp:dict,expr=None):\n        \"\"\"\n        提取响应结果\n        :param resp: json\n        :param expr: {\"token\":\"$..token\"}\n        :return:\n        \"\"\"\n        if expr == None or expr =='None':\n            logger.warning('提取表达式为空！')\n        else:\n            for key, value in expr.items():\n>               actual = jsonpath(resp, value)[0]\nE               TypeError: 'bool' object is not subscriptable\n\ncommon/utils.py:143: TypeError"}, "attachments": [{"name": "请求头", "source": "a418decc-cbce-4b9f-8db3-c021d182fe31-attachment.json", "type": "application/json"}, {"name": "请求参数", "source": "1abfc66e-abf7-496f-8810-c0f92f52f8d5-attachment.json", "type": "application/json"}, {"name": "接口响应信息", "source": "ae0f79c4-ac00-43d2-827e-6e018f254c3b-attachment.json", "type": "application/json"}], "parameters": [{"name": "data", "value": "{'title': '获取', 'account': {'method': 'post', 'url': 'patient/bindList', 'json': {'productUserId': '1215'}}, 'extract': {'idCard': '$..data.idCard'}, 'expected': {'$..code': 0, '$..msg': '操作成功', '$..data[*].idType': '$idCard', '$..data.': 27}, 'status': 200}"}], "start": 1745205868986, "stop": 1745205869028, "uuid": "eb9953b7-a0f9-4245-9c51-a9afaf790c0c", "historyId": "609493e03d925db5b663be68decb994d", "testCaseId": "028bfedd5d192ed42a44095e325a86fd", "fullName": "testcases.test_api.test_card.TestUser#test_send_code", "labels": [{"name": "parentSuite", "value": "testcases.test_api"}, {"name": "suite", "value": "test_card"}, {"name": "subSuite", "value": "TestUser"}, {"name": "host", "value": "edydeMacBook-Pro-4.local"}, {"name": "thread", "value": "44372-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_api.test_card"}]}